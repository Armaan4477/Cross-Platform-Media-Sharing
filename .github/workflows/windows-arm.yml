name: Windows ARM

on:
  push:
    branches:
      - main
      - Extra-Builds
      - Beta-Builds

jobs:
  build-windows-arm:
    runs-on: windows-11-arm
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Download Visual Studio Build Tools
        run: |
          Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile "$env:TEMP\vs_buildtools.exe"

      - name: Install Visual Studio Build Tools
        run: |
          Start-Process -FilePath "$env:TEMP\vs_buildtools.exe" -ArgumentList "--quiet", "--wait", "--norestart", "--nocache", "--installPath", "C:\BuildTools", "--add", "Microsoft.VisualStudio.Component.VC.Tools.ARM64", "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64", "--add", "Microsoft.VisualStudio.Component.Windows11SDK.22000" -Wait -NoNewWindow

      - name: Install Rust
        run: |
          Invoke-WebRequest -Uri "https://win.rustup.rs/x86_64" -OutFile "$env:TEMP\rustup-init.exe"
          Start-Process -FilePath "$env:TEMP\rustup-init.exe" -ArgumentList "-y", "--default-host", "aarch64-pc-windows-msvc" -Wait -NoNewWindow
          $env:Path += ";$env:USERPROFILE\.cargo\bin"
          rustup default stable

      - name: Set up environment for building
        run: |
          $env:PY_VCRUNTIME_REDIST = "false"
          $env:PATH = "C:\BuildTools\VC\Tools\MSVC\14.33.31629\bin\HostX86\ARM64;C:\BuildTools\VC\Tools\MSVC\14.33.31629\bin\HostX64\x64;$env:PATH"

      - name: Install PyQt6
        run: |
          pip install wheel
          pip install https://files.pythonhosted.org/packages/52/b3/0839d8fd18b86362a4de384740f2f6b6885b5d06fda7720f8a335425e316/pyqt6-6.9.1-cp39-abi3-win_arm64.whl
          pip install PyQt6-Qt6 PyQt6-sip

      - name: Install dependencies
        run: |
          pip install -r Desktop-app/actions.txt

      - name: Build for Windows ARM
        run: |
          cd Desktop-app
          & pyinstaller --onefile --windowed --uac-admin --icon=logo.ico --name="DataDash" --add-data "icons/*;icons" --add-data "assets/*;assets" --add-data "broadcast.py;." --add-data "constant.py;." --add-data "portsss.py;." --add-data "loges.py;." --add-data "credits_dialog.py;." --add-data "crypt_handler.py;." --add-data "file_receiver.py;." --add-data "file_receiver_android.py;." --add-data "file_receiver_python.py;." --add-data "file_sender.py;." --add-data "file_sender_java.py;." --add-data "preferences.py;."  main.py

      - name: Rename Windows executable
        run: |
          cd Desktop-app
          Rename-Item -Path "dist\DataDash.exe" -NewName "DataDash(windows arm).exe"

      # - name: Install Inno Setup
      #   run: |
      #     choco install innosetup -y

      # - name: Create Installer
      #   run: |
      #     cd Desktop-app
      #     & 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' dd.iss

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: DataDash(windows arm)
          path: Desktop-app/dist/DataDash(windows arm).exe