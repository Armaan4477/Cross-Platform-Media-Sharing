Pending priority work:
1) Android Encryption.
2) Send more files button and go to main menu button in python and Android.
3) Auto Check for Updates during app launch with option for user to enable/disable that feature
4) Make config in python carry over important fields such as device name, path, encryption and show warnings to the new version when it updates itself.
5) Make a inbuilt updater in android and python to download the latest versions and place it in the downloads folder.
6) Redo windows built app to avoid Defender blocking the whole app.
7) Bug fix in android app for self discovery(kill sender if receiver is activated and vice versa).
8) Implement new config json overwrite feature like it is in python.
9) Stable and Beta channels for users to test out.



Overall FUTURE IDEAS:
1) Device discovery using bluetooth- Python/Android/IOS
2) File transfer over bluetooth- Python/Android (bluetooth doesnt work well with non apple devices)
3) File transfer over wifi direct- Python/Android/IOS
4) IpadOS/IOS app
5) Can give priority to some file from new optional window if its needed urgently when many files are shared at once- Python/Android/IOS
6) When file is selected to be sent show the size of the file that has been selected in the window- Python/Android/IOS
7) Optional Encryption- Android
   Optional Encryption- IOS
8) Add confirmation dialog which ask the user if they are sure to receive the file or not, give prompt to sender that file sharing was cancelled- Python/Android/IOS
9) When file is sent give button to ask if they want to send one more file- Python/Android/IOS
10) Add button to go back to main send receive Window- Python/Android/IOS
11) Add direct repo link for open source contribution- Python/Android/IOS
12) Drag and drop support in send section of the app- Python/Android/IOS
13) Limit sharing speed for file to reduce network congrestion- Python/Android/IOS
14) File preview mode which only downloads and views the file without storing it (files smaller than 100mb)- Python/Android/IOS
15) Background run and transfer mode- Python/Android/IOS
16) Notifications for the app, implement after background run mode- Python/Android/IOS
17) Send notes along with files- Python/Android/IOS
18) Advaned telemetry which shows copy speed approx time remaining and total time- Python/Android/IOS
19) Pause and resume feature- Python/Android/IOS
20) Auto Pause incase of network loss, resume when connection is reestablished- Python/Android/IOS
21) When sending a folder show the number of total files, number of files completed and number of files remaining.
22) Add tip a coffee button which links to upi Id- Python/Android/IOS



Crazy Future idea: 
1) Web app
2) Android TV app:
    The movies we send will remain in the app data with an option to open the file in VLC player and with the built-in file manager, you will be able to delete movies and other files