Pending priority work:
1) Device discovery using bluetooth- Python/Android/IOS
2) IpadOS/IOS app

Overall FUTURE IDEAS:
1) Qr-Code Based device connection
2) File transfer over bluetooth- Python/Android (bluetooth doesnt work well with apple devices)
3) File transfer over wifi direct- Python/Android/IOS
4) IpadOS/IOS app
5) Can give priority to some file from new optional window if its needed urgently when many files are shared at once- Python/Android/IOS
6) Optional Encryption- IOS (after app is built and running)
7) Drag and drop support in send section of the app- Python/Android/IOS
8) Limit sharing speed for file to reduce network congrestion- Python/Android/IOS
9) Background run and transfer mode- Python/Android/IOS
10) Notifications for the app, implement after background run mode- Python/Android/IOS
11) Send notes along with files- Python/Android/IOS
12) Pause and resume for file transfer feature- Python/Android/IOS
13) Auto Pause incase of network loss, resume when connection is reestablished- Python/Android/IOS
14) Fixed Password for send/receive logic to confirm identity and work with unattended- Python/Android/IOS
15) Introduce basic theming or customization options (dark mode/light mode).
16) Ability to pause/resume/reorder queued transfers
17) File integrity verification after transfer
18) File Transfer history
19) File preview before sending/after receiving
20) Hot-Key Support (customizable by the user)
21) Multiple Device Simultaneous Sending
22) Optional Compression system
23) Adaptive Chunks based on network health
24) File preview mode which only downloads and views the file without storing it (files smaller than 100mb)- python


Crazy Future idea: 
1) Web app
2) Android TV app:
    The movies we send will remain in the app data with an option to open the file in VLC player and with the built-in file manager, you will be able to delete movies and other files
