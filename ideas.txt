Python- Samay
Android- Nishal
IOS- Armaan

Overall IDEAS:
In Progress
1) Actual Device name to be shown in discovery- Android/IOS
2) Android app- Android
3) IpadOS/IOS app- Armaan
4) Share multiple files at once- Python
5) Share whole folder at once- Python
6) Optional encryption for Desktop- Python
7) Add auto discovery when user clicks on send for the first time- Python/Android/IOS



Future Ideas:
1) Device discovery using bluetooth- Python/Android/IOS
2) File transfer over bluetooth- Python/Android (bluetooth doesnt work well with non apple devices)
3) File transfer over wifi direct- Python/Android/IOS
4) App icon for all Platforms- Python/Android/IOS
5) When multiple files are sent, optional window that shows the whole list- Python/Android/IOS
6) Can give priority to some file from new optional window if its needed urgently when many files are shared at once- Python/Android/IOS
7) When file is selected to be sent show the name and size of the file that has been selected in the window- Python/Android/IOS
8) Optional Encryption- Android
   Optional Encryption- IOS
9) Add confirmation dialog which ask the user if they are sure to receive the file or not, give prompt to sender that file sharing was cancelled- Python/Android/IOS
10) When file is sent give button to ask if they want to send one more file- Python/Android/IOS
11) Add option to view folder after file transfer is complete- Python/Android/IOS
12) Add button to go back to main send receive Window- Python/Android/IOS
13) Add credits dialog which links to github or linkedin account- Python/Android/IOS
14) Add direct repo link for open source contribution- Python/Android/IOS
15) Drag and drop support in send section of the app- Python/Android/IOS
16) Limit sharing speed for file to reduce network congrestion- Python/Android/IOS
17) File preview mode which only downloads and views the file without storing it (files smaller than 100mb)- Python/Android/IOS
18) Background run and transfer mode- Python/Android/IOS
19) Notifications for the app, implement after background run mode- Python/Android/IOS
20) Send notes along with files- Python/Android/IOS
21) Advaned telemetry which shows copy speed approx time remaining and total time- Python/Android/IOS
22) Pause and resume feature- Python/Android/IOS
23) Auto Pause incase of network loss, resume when connection is reestablished- Python/Android/IOS
24) When sending a folder show the number of total files, number of files completed and number of files remaining.
25) Add tip a coffee button which links to upi Id- Python/Android/IOS
26) Improve gui- to be done all for platforms in the end- Python/Android/IOS


Crazy Future idea: 
1) Web app
2) Android TV app:
    The movies we send will remain in the app data with an option to open the file in VLC player and with the built-in file manager, you will be able to delete movies and other files