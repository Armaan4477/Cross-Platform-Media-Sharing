1]  Basic questions about GitHub - pull,push,commit,branches,merge,forcepush
2]  What protocols have we used in our project and what are they
3]  What is the flowthrough of our project 
4]  What is our future scope 
5]  Why have we used TCP/UDP instead of FTP (Hint - Advantages of UDP and TCP)      /       How do you manage network congestion when using UDP for device discovery in a high-traffic environment?
6]  How is our app better than exisiting apps
7]  How do we handle our cross platform functionality (Hint - Explain the JSON exchange)
8]  Why didnt we use Flutter/Kotlin Multiplatform/React Native instead of using Java 
9]  What are the key security risks involved in peer-to-peer file sharing, and how does your solution mitigate these?       /       What is end-to-end encryption, and how is it applied in your project?
10] How do peer-to-peer (P2P) networks enhance file-sharing efficiency compared to traditional client-server models?
11] What are the challenges you have faced in building this project 
12] How does your solution handle large file transfers without internet dependency?
13] Why did you select specific TCP ports (53000, 54000) and UDP ports (12345, 12346) for device discovery and file transfers?
14] How does your system recover from a lost or dropped packet during a file transfer using TCP?        /       What measures have you implemented to ensure data integrity during file transfers across different operating systems?
15] What are the libraries/technologies used across all platforms in our app 
16] What happens if two devices attempt to initiate a file transfer simultaneously? How do you manage conflict resolution?
17] How do you optimize memory and CPU usage across different platforms (e.g., mobile vs. desktop environments)?
18] What modifications would you need to implement in the architecture to scale this solution to support hundreds of devices?   (Answer below)

MOST IMPORTANT QUESTION - DID YOU ENCOUNTER ANY BUGS DURING THIS PROJECT (IF YOU GET THIS WRONG IMMEDIATE KICK FROM GROUP)


Answers - 
18]             (Research about all this on chatgpt, this is a chatgpt generated answer, No need for detailed answer just 1-2 points)
        Introduce mDNS or Zeroconf for efficient device discovery.
        Implement a distributed peer-to-peer architecture for file transfers.
        Add load balancing and congestion control to manage network traffic.
        Shift to asynchronous file transfers for handling multiple transfers simultaneously.
        Implement robust session management for connection stability.
        Enhance security measures through advanced encryption and authentication protocols.
        Optionally introduce a centralized or hybrid coordination system for routing and connection management.
        Consider using modern transfer protocols like QUIC for better performance at scale.
        Set up performance monitoring and real-time tracking of the network's health.
